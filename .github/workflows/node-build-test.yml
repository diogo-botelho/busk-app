name: Build and Test

on:
  push:
    branches:
      - "*"
      # Run the action when a new branch is pushed
      - "!main"
  pull_request:
    branches:
      - "*"
      # Run the action when a new branch is the base branch of the pull request
      - "!main"

jobs:
  # Label for build job
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    # Docker Hub image that `container-job` executes in
    # container: node:10.18-jessie

    # Service containers to run
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: busk_app_test
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      # Set up Node
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install Node dependencies
        run: npm ci

      # - name: Set up Postgres
      #   uses: docker://postgres:13-alpine
      #   env:
      #     POSTGRES_USER: postgres
      #     POSTGRES_DB: busk_app_test
      #     POSTGRES_PASSWORD: postgres

      - name: Initiate database
        run: psql -f busk-app.sql postgresql://postgres:postgres@localhost:5432/busk_app_test

      - name: Build Node if needed
        run: npm run build --if-present

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/busk_app_test
        run: npm test
