name: Run Node Server Tests

on:
  # Whenever changes are pushed to main, run this workflow
  push:
    branches:
      - main
  # Whenever there's a PR that receives activity, run this workflow
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

jobs:
  # Label for build job
  test-node-backend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    # Service containers to run
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the configuration for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: busk_app_test
          POSTGRES_PASSWORD: password
        # Set health checks to wait until postgres has started
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      # Set up Node
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install Node dependencies
        run: npm ci

      # Seeds the database with the sql seed file
      - name: Initiate database
        run: psql -f busk-app.sql postgresql://postgres:password@localhost:5432/busk_app_test

      # Runs test files with the pg environment variables set
      # Note, the pg module uses a different naming than the varibles used for Docker
      - name: Run tests
        env:
          PGUSER: postgres
          PGPASSWORD: password
        run: npm test
